/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DepositHelperReaperBPT,
  DepositHelperReaperBPTInterface,
} from "../../../../contracts/helpers/DepositHelperReaperBPT.sol/DepositHelperReaperBPT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_reliquary",
        type: "address",
      },
      {
        internalType: "address",
        name: "_reZap",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "startToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "endToken",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "inIdx",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "outIdx",
            type: "uint8",
          },
          {
            internalType: "enum IReZap.JoinType",
            name: "jT",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
        ],
        internalType: "struct IReZap.Step[]",
        name: "steps",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createRelicAndDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "startToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "endToken",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "inIdx",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "outIdx",
            type: "uint8",
          },
          {
            internalType: "enum IReZap.JoinType",
            name: "jT",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
        ],
        internalType: "struct IReZap.Step[]",
        name: "steps",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reZap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reliquary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "startToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "endToken",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "inIdx",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "outIdx",
            type: "uint8",
          },
          {
            internalType: "enum IReZap.JoinType",
            name: "jT",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
        ],
        internalType: "struct IReZap.Step[]",
        name: "steps",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "harvest",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "giveEther",
        type: "bool",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "startToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "endToken",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "inIdx",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "outIdx",
            type: "uint8",
          },
          {
            internalType: "enum IReZap.JoinType",
            name: "jT",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
        ],
        internalType: "struct IReZap.Step[]",
        name: "steps",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "giveEther",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "burn",
        type: "bool",
      },
    ],
    name: "withdrawAllAndHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001d8038038062001d80833981016040819052620000349162000138565b6200003f33620000cb565b6001600160a01b03808316608052811660a0819052604080516315ab88c960e31b8152905163ad5c4648916004808201926020929091908290030181865afa15801562000090573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b6919062000170565b6001600160a01b031660c05250620001959050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200013357600080fd5b919050565b600080604083850312156200014c57600080fd5b62000157836200011b565b915062000167602084016200011b565b90509250929050565b6000602082840312156200018357600080fd5b6200018e826200011b565b9392505050565b60805160a05160c051611b676200021960003960008181610106015281816106e80152610bb301526000818161018701528181610a0c01528181610d6501528181610e520152610ee30152600081816101f901528181610319015281816105ea0152818161077401528181610cf60152818161104d01526110e20152611b676000f3fe6080604052600436106100a05760003560e01c80637f0eec41116100645780637f0eec41146101755780638da5cb5b146101a9578063d6833dae146101c7578063e754de63146101e7578063f2fde38b1461021b578063f4e030941461023b57600080fd5b80630b0469f5146100ac57806332379a09146100ce5780633fc8cef3146100f45780636ccae05414610140578063715018a61461016057600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100cc6100c736600461168b565b610263565b005b6100e16100dc3660046116ff565b6102fa565b6040519081526020015b60405180910390f35b34801561010057600080fd5b506101287f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100eb565b34801561014c57600080fd5b506100cc61015b366004611765565b6104c2565b34801561016c57600080fd5b506100cc610504565b34801561018157600080fd5b506101287f000000000000000000000000000000000000000000000000000000000000000081565b3480156101b557600080fd5b506000546001600160a01b0316610128565b3480156101d357600080fd5b506100cc6101e23660046117a6565b610518565b3480156101f357600080fd5b506101287f000000000000000000000000000000000000000000000000000000000000000081565b34801561022757600080fd5b506100cc610236366004611822565b61053c565b61024e6102493660046116ff565b6105b5565b604080519283526020830191909152016100eb565b60008060006102748888888861066a565b92509250925061028f83828a8a86600001518b60018c61091b565b83156102f057604051630852cd8d60e31b8152600481018790526001600160a01b038416906342966c6890602401600060405180830381600087803b1580156102d757600080fd5b505af11580156102eb573d6000803e3d6000fd5b505050505b5050505050505050565b60405163430c208160e01b8152336004820152602481018290526000907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063430c208190604401602060405180830381865afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e9190611846565b6103d75760405162461bcd60e51b81526020600482015260156024820152741b9bdd081bdddb995c881bdc88185c1c1c9bdd9959605a1b60448201526064015b60405180910390fd5b6104558686836001600160a01b031663e48dc135876040518263ffffffff1660e01b815260040161040a91815260200190565b60c060405180830381865afa158015610427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044b9190611863565b6080015187610cd3565b604051631c57762b60e31b815260048101829052602481018590529092506001600160a01b0382169063e2bbb15890604401600060405180830381600087803b1580156104a157600080fd5b505af11580156104b5573d6000803e3d6000fd5b5050505050949350505050565b6104ca61116b565b6001600160a01b0383166104f0576104eb6001600160a01b038316826111c5565b505050565b6104eb6001600160a01b03841683836112de565b61050c61116b565b6105166000611341565b565b6000806105278888878661066a565b92505091506102f082828a8a8a8a8a8a61091b565b61054461116b565b6001600160a01b0381166105a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ce565b6105b281611341565b50565b6000806105c486868686610cd3565b604051636705fcf360e01b815233600482015260248101869052604481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636705fcf3906064016020604051808303816000875af115801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f91906118eb565b915094509492505050565b60006106a56040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60008087876106b5600182611904565b8181106106c4576106c461192b565b905060e0020160200160208101906106dc9190611822565b905084158061071c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b6107585760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737465707360981b60448201526064016103ce565b60405163430c208160e01b8152336004820152602481018790527f000000000000000000000000000000000000000000000000000000000000000094506001600160a01b0385169063430c208190604401602060405180830381865afa1580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190611846565b61082e5760405162461bcd60e51b81526020600482015260156024820152741b9bdd081bdddb995c881bdc88185c1c1c9bdd9959605a1b60448201526064016103ce565b60405163e48dc13560e01b8152600481018790526001600160a01b0385169063e48dc1359060240160c060405180830381865afa158015610873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108979190611863565b6080810151604051636e7d401960e01b81529194506001600160a01b03861691636e7d4019916108cd9160040190815260200190565b602060405180830381865afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190611941565b9150509450945094915050565b811561098d5760405163d1abb90760e01b815260048101859052602481018490523360448201526001600160a01b0389169063d1abb90790606401600060405180830381600087803b15801561097057600080fd5b505af1158015610984573d6000803e3d6000fd5b505050506109ef565b604051630441a3e760e41b815260048101859052602481018490526001600160a01b0389169063441a3e7090604401600060405180830381600087803b1580156109d657600080fd5b505af11580156109ea573d6000803e3d6000fd5b505050505b604051636eb1769f60e11b81523060048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008181166024840152919089169063dd62ed3e90604401602060405180830381865afa158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906118eb565b600003610aff5760405163095ea7b360e01b81526001600160a01b038281166004830152600019602483015289169063095ea7b3906044016020604051808303816000875af1158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd9190611846565b505b604051637f7bca9560e11b81526001600160a01b0382169063fef7952a90610b31908a908a908d908b90600401611a62565b600060405180830381600087803b158015610b4b57600080fd5b505af1158015610b5f573d6000803e3d6000fd5b505050508115610b7857610b7333476111c5565b610cc8565b6000808888610b88600182611904565b818110610b9757610b9761192b565b905060e002016020016020810190610baf9190611822565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031603610c4657479150806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015610c2857600080fd5b505af1158015610c3c573d6000803e3d6000fd5b5050505050610cb1565b6040516370a0823160e01b81523060048201526001600160a01b038216906370a0823190602401602060405180830381865afa158015610c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cae91906118eb565b91505b610cc56001600160a01b03821633846112de565b50505b505050505050505050565b604051636e7d401960e01b81526004810183905260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636e7d401990602401602060405180830381865afa158015610d3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d619190611941565b90507f00000000000000000000000000000000000000000000000000000000000000003415610df35760405163e11b4f2760e01b81526001600160a01b0382169063e11b4f27903490610dbc908b908b908890600401611a92565b6000604051808303818588803b158015610dd557600080fd5b505af1158015610de9573d6000803e3d6000fd5b5050505050610fc8565b600087876000818110610e0857610e0861192b565b610e1e92602060e0909202019081019150611822565b9050610e356001600160a01b038216333088611391565b604051636eb1769f60e11b81523060048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015282169063dd62ed3e90604401602060405180830381865afa158015610ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec591906118eb565b600003610f625760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015282169063095ea7b3906044016020604051808303816000875af1158015610f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f609190611846565b505b604051633792b62160e01b81526001600160a01b03831690633792b62190610f94908b908b9088908b90600401611a62565b600060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b50505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa15801561100c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103091906118eb565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529194509083169063dd62ed3e90604401602060405180830381865afa1580156110a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c491906118eb565b6000036111615760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af115801561113b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115f9190611846565b505b5050949350505050565b6000546001600160a01b031633146105165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ce565b804710156112155760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103ce565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611262576040519150601f19603f3d011682016040523d82523d6000602084013e611267565b606091505b50509050806104eb5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103ce565b6040516001600160a01b0383166024820152604481018290526104eb90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113cf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526113c99085906323b872dd60e01b9060840161130a565b50505050565b6000611424826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114a19092919063ffffffff16565b8051909150156104eb57808060200190518101906114429190611846565b6104eb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103ce565b60606114b084846000856114b8565b949350505050565b6060824710156115195760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103ce565b600080866001600160a01b031685876040516115359190611ae2565b60006040518083038185875af1925050503d8060008114611572576040519150601f19603f3d011682016040523d82523d6000602084013e611577565b606091505b509150915061158887838387611593565b979650505050505050565b606083156116025782516000036115fb576001600160a01b0385163b6115fb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103ce565b50816114b0565b6114b083838151156116175781518083602001fd5b8060405162461bcd60e51b81526004016103ce9190611afe565b60008083601f84011261164357600080fd5b50813567ffffffffffffffff81111561165b57600080fd5b60208301915083602060e08302850101111561167657600080fd5b9250929050565b80151581146105b257600080fd5b6000806000806000608086880312156116a357600080fd5b853567ffffffffffffffff8111156116ba57600080fd5b6116c688828901611631565b9096509450506020860135925060408601356116e18161167d565b915060608601356116f18161167d565b809150509295509295909350565b6000806000806060858703121561171557600080fd5b843567ffffffffffffffff81111561172c57600080fd5b61173887828801611631565b90989097506020870135966040013595509350505050565b6001600160a01b03811681146105b257600080fd5b60008060006060848603121561177a57600080fd5b833561178581611750565b9250602084013561179581611750565b929592945050506040919091013590565b60008060008060008060a087890312156117bf57600080fd5b863567ffffffffffffffff8111156117d657600080fd5b6117e289828a01611631565b909750955050602087013593506040870135925060608701356118048161167d565b915060808701356118148161167d565b809150509295509295509295565b60006020828403121561183457600080fd5b813561183f81611750565b9392505050565b60006020828403121561185857600080fd5b815161183f8161167d565b600060c0828403121561187557600080fd5b60405160c0810181811067ffffffffffffffff821117156118a657634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b6000602082840312156118fd57600080fd5b5051919050565b8181038181111561192557634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561195357600080fd5b815161183f81611750565b803560ff8116811461196f57600080fd5b919050565b80356002811061196f57600080fd5b600281106119a157634e487b7160e01b600052602160045260246000fd5b9052565b8183526000602080850194508260005b85811015611a575781356119c881611750565b6001600160a01b03908116885282840135906119e382611750565b168784015260406119f583820161195e565b60ff808216838b01526060925080611a0e84870161195e565b16838b01525050506080611a23818401611974565b611a2f828a0182611983565b505060a0828101359088015260c0808301359088015260e096870196909101906001016119b5565b509495945050505050565b606081526000611a766060830186886119a5565b6001600160a01b03949094166020830152506040015292915050565b604081526000611aa66040830185876119a5565b905060018060a01b0383166020830152949350505050565b60005b83811015611ad9578181015183820152602001611ac1565b50506000910152565b60008251611af4818460208701611abe565b9190910192915050565b6020815260008251806020840152611b1d816040850160208701611abe565b601f01601f1916919091016040019291505056fea264697066735822122075d3594fdab9c4b16d890564ed17c1514ca47d6af11f09082dc2b27ef4f5f8b764736f6c63430008110033";

type DepositHelperReaperBPTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositHelperReaperBPTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositHelperReaperBPT__factory extends ContractFactory {
  constructor(...args: DepositHelperReaperBPTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _reliquary: PromiseOrValue<string>,
    _reZap: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositHelperReaperBPT> {
    return super.deploy(
      _reliquary,
      _reZap,
      overrides || {}
    ) as Promise<DepositHelperReaperBPT>;
  }
  override getDeployTransaction(
    _reliquary: PromiseOrValue<string>,
    _reZap: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_reliquary, _reZap, overrides || {});
  }
  override attach(address: string): DepositHelperReaperBPT {
    return super.attach(address) as DepositHelperReaperBPT;
  }
  override connect(signer: Signer): DepositHelperReaperBPT__factory {
    return super.connect(signer) as DepositHelperReaperBPT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositHelperReaperBPTInterface {
    return new utils.Interface(_abi) as DepositHelperReaperBPTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositHelperReaperBPT {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DepositHelperReaperBPT;
  }
}
