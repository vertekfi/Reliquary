/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ChildRewarder,
  ChildRewarderInterface,
} from "../../../contracts/rewarders/ChildRewarder";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_reliquary",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "LogOnReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "LogRewardMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "onDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "onReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawalAmount",
        type: "uint256",
      },
    ],
    name: "onWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "pendingToken",
    outputs: [
      {
        internalType: "uint256",
        name: "pending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "pendingTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewardAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reliquary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "setRewardMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162000e7838038062000e788339810160408190526200003591620001c1565b6001600160a01b03808316608052811660a081905260008490556040805163f7c618c160e01b8152905185928592859285928592859263f7c618c1916004808201926020929091908290030181865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd919062000202565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000121919062000227565b6200012e90600a62000361565b60c0525062000141915033905062000152565b50503360e052506200037292505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620001bc57600080fd5b919050565b600080600060608486031215620001d757600080fd5b83519250620001e960208501620001a4565b9150620001f960408501620001a4565b90509250925092565b6000602082840312156200021557600080fd5b6200022082620001a4565b9392505050565b6000602082840312156200023a57600080fd5b815160ff811681146200022057600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002a35781600019048211156200028757620002876200024c565b808516156200029557918102915b93841c939080029062000267565b509250929050565b600082620002bc575060016200035b565b81620002cb575060006200035b565b8160018114620002e45760028114620002ef576200030f565b60019150506200035b565b60ff8411156200030357620003036200024c565b50506001821b6200035b565b5060208310610133831016604e8410600b841016171562000334575081810a6200035b565b62000340838362000262565b80600019048211156200035757620003576200024c565b0290505b92915050565b60006200022060ff841683620002ab565b60805160a05160c05160e051610ab7620003c16000396000818161014b015261037e01526000610321015260006101bf0152600081816101f90152818161028501526105510152610ab76000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063bef26de011610066578063bef26de0146100d4578063e754de63146101ba578063f2fde38b146101e1578063f7c618c1146101f457600080fd5b8063715018a61461018e5780638da5cb5b14610196578063a51b1080146101a757600080fd5b806303004b47146100d45780630bd075a1146100e85780630c155f03146100fb57806326b41a061461012557806360f96a8f146101465780636f2c590a14610185575b600080fd5b6100e66100e236600461085e565b5050565b005b6100e66100f6366004610880565b61021b565b61010e61010936600461085e565b61025e565b60405161011c929190610899565b60405180910390f35b61013861013336600461085e565b61031d565b60405190815260200161011c565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011c565b61013860005481565b6100e661035f565b6001546001600160a01b031661016d565b6100e66101b5366004610939565b610373565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b6100e66101ef36600461096e565b61040c565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b610223610485565b60008190556040518181527f935d199acd8f4b2ddab56752af2edde1665f08840a56108718e70b33a1e42e089060200160405180910390a150565b604080516001808252818301909252606091829190602080830190803683370190505091507f0000000000000000000000000000000000000000000000000000000000000000826000815181106102b7576102b7610989565b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505090506102f7848461031d565b8160008151811061030a5761030a610989565b6020026020010181815250509250929050565b60007f00000000000000000000000000000000000000000000000000000000000000006000548361034e919061099f565b61035891906109ca565b9392505050565b610367610485565b61037160006104df565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103fc5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920706172656e742063616e2063616c6c20746869732066756e63746960448201526237b71760e91b60648201526084015b60405180910390fd5b610407838383610531565b505050565b610414610485565b6001600160a01b0381166104795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f3565b610482816104df565b50565b6001546001600160a01b031633146103715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f3565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054156105785761057881610547858561031d565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906105c1565b806001600160a01b0316837fcdc9fd371154c559abac08b9dcd2ad4487ea53751ef20089b83d76f95badc850846040516105b491815260200190565b60405180910390a3505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610407928692916000916106519185169084906106ce565b805190915015610407578080602001905181019061066f91906109ec565b6104075760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103f3565b60606106dd84846000856106e5565b949350505050565b6060824710156107465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103f3565b600080866001600160a01b031685876040516107629190610a32565b60006040518083038185875af1925050503d806000811461079f576040519150601f19603f3d011682016040523d82523d6000602084013e6107a4565b606091505b50915091506107b5878383876107c0565b979650505050505050565b6060831561082f578251600003610828576001600160a01b0385163b6108285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103f3565b50816106dd565b6106dd83838151156108445781518083602001fd5b8060405162461bcd60e51b81526004016103f39190610a4e565b6000806040838503121561087157600080fd5b50508035926020909101359150565b60006020828403121561089257600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b828110156108db5781516001600160a01b0316845292840192908401906001016108b6565b5050508381038285015284518082528583019183019060005b81811015610910578351835292840192918401916001016108f4565b5090979650505050505050565b80356001600160a01b038116811461093457600080fd5b919050565b60008060006060848603121561094e57600080fd5b83359250602084013591506109656040850161091d565b90509250925092565b60006020828403121561098057600080fd5b6103588261091d565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176109c457634e487b7160e01b600052601160045260246000fd5b92915050565b6000826109e757634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156109fe57600080fd5b8151801515811461035857600080fd5b60005b83811015610a29578181015183820152602001610a11565b50506000910152565b60008251610a44818460208701610a0e565b9190910192915050565b6020815260008251806020840152610a6d816040850160208701610a0e565b601f01601f1916919091016040019291505056fea26469706673582212208e6bf227d872c632758518a6d8c50d0036303f141d66e6aae076be919eb4f9b664736f6c63430008110033";

type ChildRewarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChildRewarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChildRewarder__factory extends ContractFactory {
  constructor(...args: ChildRewarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardMultiplier: PromiseOrValue<BigNumberish>,
    _rewardToken: PromiseOrValue<string>,
    _reliquary: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChildRewarder> {
    return super.deploy(
      _rewardMultiplier,
      _rewardToken,
      _reliquary,
      overrides || {}
    ) as Promise<ChildRewarder>;
  }
  override getDeployTransaction(
    _rewardMultiplier: PromiseOrValue<BigNumberish>,
    _rewardToken: PromiseOrValue<string>,
    _reliquary: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardMultiplier,
      _rewardToken,
      _reliquary,
      overrides || {}
    );
  }
  override attach(address: string): ChildRewarder {
    return super.attach(address) as ChildRewarder;
  }
  override connect(signer: Signer): ChildRewarder__factory {
    return super.connect(signer) as ChildRewarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChildRewarderInterface {
    return new utils.Interface(_abi) as ChildRewarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChildRewarder {
    return new Contract(address, _abi, signerOrProvider) as ChildRewarder;
  }
}
