/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Gym, GymInterface } from "../../../contracts/gamification/Gym";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_reliquary",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ITERATIONS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "relicIds",
        type: "uint256[]",
      },
    ],
    name: "createSeed",
    outputs: [
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reliquary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "relicIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "proof",
        type: "uint256",
      },
    ],
    name: "train",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109a83803806109a883398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610915806100936000396000f3fe608060405234801561001057600080fd5b50600436106100565760003560e01c806217cd8b1461005b5780633c3896031461008757806369273a801461009c5780639fe25aa9146100af578063e754de63146100b8575b600080fd5b6100747104f627b3bbd341d240517fe3db99ad3b2c2781565b6040519081526020015b60405180910390f35b61009a610095366004610779565b6100e3565b005b6100746100aa3660046107c5565b61023e565b6100746103e881565b6001546100cb906001600160a01b031681565b6040516001600160a01b03909116815260200161007e565b600060026000858560008181106100fc576100fc610807565b905060200201358152602001908152602001600020549050806000036101535760405162461bcd60e51b81526020600482015260076024820152661b9bc81cd9595960ca1b60448201526064015b60405180910390fd5b61015d8282610581565b600061016c6201518084610833565b90506101918585600081811061018457610184610807565b90506020020135826105e1565b60015b848110156102365782600260008888858181106101b3576101b3610807565b905060200201358152602001908152602001600020541461020c5760405162461bcd60e51b81526020600482015260136024820152720a4cad8d2c640e6cacac840dad2e6dac2e8c6d606b1b604482015260640161014a565b61022e86868381811061022157610221610807565b90506020020135836105e1565b600101610194565b505050505050565b6000610248610654565b6001549091506001600160a01b031660005b8381101561057957816001600160a01b031663430c20813387878581811061028457610284610807565b6040516001600160e01b031960e087901b1681526001600160a01b0390941660048501526020029190910135602483015250604401602060405180830381865afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610855565b6103375760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b604482015260640161014a565b6000826001600160a01b0316634f735ac387878581811061035a5761035a610807565b905060200201356040518263ffffffff1660e01b815260040161037f91815260200190565b602060405180830381865afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c0919061087e565b905062015180836001600160a01b031663013e390b8888868181106103e7576103e7610807565b905060200201356040518263ffffffff1660e01b815260040161040c91815260200190565b602060405180830381865afa158015610429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044d919061087e565b61045790426108ad565b10158015610479575080158061047957506201518061047682426108ad565b10155b6104c55760405162461bcd60e51b815260206004820152601960248201527f746f6f20736f6f6e2073696e6365206c61737420626f6e757300000000000000604482015260640161014a565b83600260008888868181106104dc576104dc610807565b90506020020135815260200190815260200160002081905550826001600160a01b0316639a33709c87878581811061051657610516610807565b905060200201356040518263ffffffff1660e01b815260040161053b91815260200190565b600060405180830381600087803b15801561055557600080fd5b505af1158015610569573d6000803e3d6000fd5b505050508160010191505061025a565b505092915050565b6105a182827104f627b3bbd341d240517fe3db99ad3b2c276103e86106c7565b6105dd5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b604482015260640161014a565b5050565b6000828152600260205260408082209190915560015490516306986e4b60e31b815260048101849052602481018390526001600160a01b03909116906334c3725890604401600060405180830381600087803b15801561064057600080fd5b505af1158015610236573d6000803e3d6000fd5b6000336000808154610665906108c6565b9182905550426106766001436108ad565b60405160609490941b6bffffffffffffffffffffffff19166020850152603484019290925260548301524060748201526094016040516020818303038152906040528051906020012060001c905090565b6000805b828110156106ee5783806106e1576106e161081d565b86870995506001016106cb565b508284816106fe576106fe61081d565b06935084840361071057506001610725565b848484030361072157506001610725565b5060005b949350505050565b60008083601f84011261073f57600080fd5b50813567ffffffffffffffff81111561075757600080fd5b6020830191508360208260051b850101111561077257600080fd5b9250929050565b60008060006040848603121561078e57600080fd5b833567ffffffffffffffff8111156107a557600080fd5b6107b18682870161072d565b909790965060209590950135949350505050565b600080602083850312156107d857600080fd5b823567ffffffffffffffff8111156107ef57600080fd5b6107fb8582860161072d565b90969095509350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261085057634e487b7160e01b600052601260045260246000fd5b500690565b60006020828403121561086757600080fd5b8151801515811461087757600080fd5b9392505050565b60006020828403121561089057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156108c0576108c0610897565b92915050565b6000600182016108d8576108d8610897565b506001019056fea2646970667358221220973b008607ee9afd564982ed557ef80ece54a1b99634d6e313fa70bb90b9e37d64736f6c63430008110033";

type GymConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GymConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gym__factory extends ContractFactory {
  constructor(...args: GymConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _reliquary: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gym> {
    return super.deploy(_reliquary, overrides || {}) as Promise<Gym>;
  }
  override getDeployTransaction(
    _reliquary: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_reliquary, overrides || {});
  }
  override attach(address: string): Gym {
    return super.attach(address) as Gym;
  }
  override connect(signer: Signer): Gym__factory {
    return super.connect(signer) as Gym__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GymInterface {
    return new utils.Interface(_abi) as GymInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gym {
    return new Contract(address, _abi, signerOrProvider) as Gym;
  }
}
