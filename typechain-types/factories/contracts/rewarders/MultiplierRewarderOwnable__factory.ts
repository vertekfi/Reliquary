/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MultiplierRewarderOwnable,
  MultiplierRewarderOwnableInterface,
} from "../../../contracts/rewarders/MultiplierRewarderOwnable";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_reliquary",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "LogOnReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "LogRewardMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "onDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "onReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawalAmount",
        type: "uint256",
      },
    ],
    name: "onWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "pendingToken",
    outputs: [
      {
        internalType: "uint256",
        name: "pending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "pendingTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewardAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reliquary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "setRewardMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162000e1c38038062000e1c8339810160408190526200003491620001b2565b6001600160a01b03808316608052811660a081905260008490556040805163f7c618c160e01b8152905185928592859263f7c618c1916004808201926020929091908290030181865afa15801562000090573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b69190620001f3565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011a919062000218565b6200012790600a62000352565b60c052506200013a915033905062000143565b50505062000363565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620001ad57600080fd5b919050565b600080600060608486031215620001c857600080fd5b83519250620001da6020850162000195565b9150620001ea6040850162000195565b90509250925092565b6000602082840312156200020657600080fd5b620002118262000195565b9392505050565b6000602082840312156200022b57600080fd5b815160ff811681146200021157600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002945781600019048211156200027857620002786200023d565b808516156200028657918102915b93841c939080029062000258565b509250929050565b600082620002ad575060016200034c565b81620002bc575060006200034c565b8160018114620002d55760028114620002e05762000300565b60019150506200034c565b60ff841115620002f457620002f46200023d565b50506001821b6200034c565b5060208310610133831016604e8410600b841016171562000325575081810a6200034c565b62000331838362000253565b80600019048211156200034857620003486200023d565b0290505b92915050565b60006200021160ff8416836200029c565b60805160a05160c051610a74620003a860003960006102db01526000818161017901526103380152600081816101b30152818161023f015261050e0152610a746000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461013c578063a51b108014610161578063bef26de0146100b9578063e754de6314610174578063f2fde38b1461019b578063f7c618c1146101ae57600080fd5b806303004b47146100b95780630bd075a1146100cd5780630c155f03146100e057806326b41a061461010a5780636f2c590a1461012b578063715018a614610134575b600080fd5b6100cb6100c736600461081b565b5050565b005b6100cb6100db36600461083d565b6101d5565b6100f36100ee36600461081b565b610218565b604051610101929190610856565b60405180910390f35b61011d61011836600461081b565b6102d7565b604051908152602001610101565b61011d60005481565b6100cb610319565b6001546001600160a01b03165b6040516001600160a01b039091168152602001610101565b6100cb61016f3660046108f6565b61032d565b6101497f000000000000000000000000000000000000000000000000000000000000000081565b6100cb6101a936600461092b565b6103c9565b6101497f000000000000000000000000000000000000000000000000000000000000000081565b6101dd610442565b60008190556040518181527f935d199acd8f4b2ddab56752af2edde1665f08840a56108718e70b33a1e42e089060200160405180910390a150565b604080516001808252818301909252606091829190602080830190803683370190505091507f00000000000000000000000000000000000000000000000000000000000000008260008151811061027157610271610946565b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505090506102b184846102d7565b816000815181106102c4576102c4610946565b6020026020010181815250509250929050565b60007f000000000000000000000000000000000000000000000000000000000000000060005483610308919061095c565b6103129190610987565b9392505050565b610321610442565b61032b600061049c565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103b95760405162461bcd60e51b815260206004820152602660248201527f4f6e6c792052656c6971756172792063616e2063616c6c20746869732066756e60448201526531ba34b7b71760d11b60648201526084015b60405180910390fd5b6103c48383836104ee565b505050565b6103d1610442565b6001600160a01b0381166104365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b0565b61043f8161049c565b50565b6001546001600160a01b0316331461032b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b0565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005415610535576105358161050485856102d7565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016919061057e565b806001600160a01b0316837fcdc9fd371154c559abac08b9dcd2ad4487ea53751ef20089b83d76f95badc8508460405161057191815260200190565b60405180910390a3505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526103c49286929160009161060e91851690849061068b565b8051909150156103c4578080602001905181019061062c91906109a9565b6103c45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103b0565b606061069a84846000856106a2565b949350505050565b6060824710156107035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103b0565b600080866001600160a01b0316858760405161071f91906109ef565b60006040518083038185875af1925050503d806000811461075c576040519150601f19603f3d011682016040523d82523d6000602084013e610761565b606091505b50915091506107728783838761077d565b979650505050505050565b606083156107ec5782516000036107e5576001600160a01b0385163b6107e55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103b0565b508161069a565b61069a83838151156108015781518083602001fd5b8060405162461bcd60e51b81526004016103b09190610a0b565b6000806040838503121561082e57600080fd5b50508035926020909101359150565b60006020828403121561084f57600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b828110156108985781516001600160a01b031684529284019290840190600101610873565b5050508381038285015284518082528583019183019060005b818110156108cd578351835292840192918401916001016108b1565b5090979650505050505050565b80356001600160a01b03811681146108f157600080fd5b919050565b60008060006060848603121561090b57600080fd5b8335925060208401359150610922604085016108da565b90509250925092565b60006020828403121561093d57600080fd5b610312826108da565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761098157634e487b7160e01b600052601160045260246000fd5b92915050565b6000826109a457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156109bb57600080fd5b8151801515811461031257600080fd5b60005b838110156109e65781810151838201526020016109ce565b50506000910152565b60008251610a018184602087016109cb565b9190910192915050565b6020815260008251806020840152610a2a8160408501602087016109cb565b601f01601f1916919091016040019291505056fea2646970667358221220c3fc1a52ee9d79c1562af66d84b5c1256ef37bcde6e34ecf61bec36c6f96185b64736f6c63430008110033";

type MultiplierRewarderOwnableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiplierRewarderOwnableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiplierRewarderOwnable__factory extends ContractFactory {
  constructor(...args: MultiplierRewarderOwnableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardMultiplier: PromiseOrValue<BigNumberish>,
    _rewardToken: PromiseOrValue<string>,
    _reliquary: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiplierRewarderOwnable> {
    return super.deploy(
      _rewardMultiplier,
      _rewardToken,
      _reliquary,
      overrides || {}
    ) as Promise<MultiplierRewarderOwnable>;
  }
  override getDeployTransaction(
    _rewardMultiplier: PromiseOrValue<BigNumberish>,
    _rewardToken: PromiseOrValue<string>,
    _reliquary: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardMultiplier,
      _rewardToken,
      _reliquary,
      overrides || {}
    );
  }
  override attach(address: string): MultiplierRewarderOwnable {
    return super.attach(address) as MultiplierRewarderOwnable;
  }
  override connect(signer: Signer): MultiplierRewarderOwnable__factory {
    return super.connect(signer) as MultiplierRewarderOwnable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiplierRewarderOwnableInterface {
    return new utils.Interface(_abi) as MultiplierRewarderOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiplierRewarderOwnable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultiplierRewarderOwnable;
  }
}
