/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ParentRewarder,
  ParentRewarderInterface,
} from "../../../contracts/rewarders/ParentRewarder";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_reliquary",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "child",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "ChildCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "child",
        type: "address",
      },
    ],
    name: "ChildRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "LogOnReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "LogRewardMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "createChild",
    outputs: [
      {
        internalType: "address",
        name: "child",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChildrenRewarders",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "onDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "onReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawalAmount",
        type: "uint256",
      },
    ],
    name: "onWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "pendingToken",
    outputs: [
      {
        internalType: "uint256",
        name: "pending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "pendingTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewardAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reliquary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "childRewarder",
        type: "address",
      },
    ],
    name: "removeChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "setRewardMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162002ca838038062002ca88339810160408190526200003491620002f8565b6001600160a01b03808316608052811660a081905260008490556040805163f7c618c160e01b8152905185928592859263f7c618c1916004808201926020929091908290030181865afa15801562000090573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b6919062000339565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011a919062000357565b6200012790600a62000496565b60c052506200013c915060009050336200019d565b620001687ffdb48404bce6564ad991a8c7356d24ed1e890b5d7445a54878f0c46021506212336200019d565b620001947fd9953e9d26e655ee6eef609dd8fe44247a567ba97a3566c3446ad19db00817a8336200019d565b505050620004a7565b620001b48282620001e060201b62000b961760201c565b6000828152600260209081526040909120620001db91839062000c0462000269821b17901c565b505050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620002655760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45b5050565b600062000280836001600160a01b03841662000289565b90505b92915050565b6000818152600183016020526040812054620002d25750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000283565b50600062000283565b80516001600160a01b0381168114620002f357600080fd5b919050565b6000806000606084860312156200030e57600080fd5b835192506200032060208501620002db565b91506200033060408501620002db565b90509250925092565b6000602082840312156200034c57600080fd5b6200028082620002db565b6000602082840312156200036a57600080fd5b815160ff811681146200037c57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003da578160001904821115620003be57620003be62000383565b80851615620003cc57918102915b93841c93908002906200039e565b509250929050565b600082620003f35750600162000283565b81620004025750600062000283565b81600181146200041b5760028114620004265762000446565b600191505062000283565b60ff8411156200043a576200043a62000383565b50506001821b62000283565b5060208310610133831016604e8410600b84101617156200046b575081810a62000283565b62000477838362000399565b80600019048211156200048e576200048e62000383565b029392505050565b60006200028060ff841683620003e2565b60805160a05160c0516127b5620004f3600039600061077401526000818161033e015281816108a80152610a1f015260008181610366015281816104890152610d1001526127b56000f3fe60806040523480156200001157600080fd5b5060043610620001515760003560e01c80636db4067411620000c7578063a51b10801162000086578063a51b108014620002f3578063bef26de01462000182578063ca15c873146200030a578063d547741f1462000321578063e754de631462000338578063f7c618c1146200036057600080fd5b80636db4067414620002825780636f2c590a14620002b25780639010d07c14620002bc57806391d1485414620002d3578063a217fddf14620002ea57600080fd5b8063248a9ca31162000114578063248a9ca314620001ee57806326b41a0614620002245780632f2ff15d146200023b57806336568abe1462000252578063416504af146200026957600080fd5b806301ffc9a7146200015657806303004b4714620001825780630bd075a114620001995780630c155f0314620001b057806312a39db214620001d7575b600080fd5b6200016d62000167366004620014dc565b62000388565b60405190151581526020015b60405180910390f35b620001976200019336600462001508565b5050565b005b62000197620001aa3660046200152b565b620003b6565b620001c7620001c136600462001508565b6200041e565b604051620001799291906200158b565b62000197620001e8366004620015fc565b620006ad565b62000215620001ff3660046200152b565b6000908152600160208190526040909120015490565b60405190815260200162000179565b620002156200023536600462001508565b62000770565b620001976200024c3660046200161c565b620007b6565b62000197620002633660046200161c565b620007e5565b6200027362000863565b6040516200017991906200164f565b620002996200029336600462001664565b62000876565b6040516001600160a01b03909116815260200162000179565b6200021560005481565b62000299620002cd36600462001508565b620009cf565b6200016d620002e43660046200161c565b620009e9565b62000215600081565b6200019762000304366004620016ab565b62000a14565b620002156200031b3660046200152b565b62000b53565b62000197620003323660046200161c565b62000b6c565b620002997f000000000000000000000000000000000000000000000000000000000000000081565b620002997f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216635a05180f60e01b1480620003b05750620003b08262000c1b565b92915050565b7ffdb48404bce6564ad991a8c7356d24ed1e890b5d7445a54878f0c46021506212620003e28162000c52565b60008290556040518281527f935d199acd8f4b2ddab56752af2edde1665f08840a56108718e70b33a1e42e089060200160405180910390a15050565b60608060006200042f600362000c61565b6200043c906001620016f2565b90508067ffffffffffffffff8111156200045a576200045a62001708565b60405190808252806020026020018201604052801562000484578160200160208202803683370190505b5092507f000000000000000000000000000000000000000000000000000000000000000083600081518110620004be57620004be6200171e565b60200260200101906001600160a01b031690816001600160a01b0316815250508067ffffffffffffffff811115620004fa57620004fa62001708565b60405190808252806020026020018201604052801562000524578160200160208202803683370190505b50915062000533858562000770565b826000815181106200054957620005496200171e565b602090810291909101015260015b81811015620006a45760006200057c6200057360018462001734565b60039062000c6c565b9050806001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005e391906200174a565b858381518110620005f857620005f86200171e565b6001600160a01b03928316602091820292909201015260405163135a0d0360e11b81526004810189905260248101889052908216906326b41a0690604401602060405180830381865afa15801562000654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200067a91906200176a565b8483815181106200068f576200068f6200171e565b60209081029190910101525060010162000557565b50509250929050565b7fd9953e9d26e655ee6eef609dd8fe44247a567ba97a3566c3446ad19db00817a8620006d98162000c52565b620006e660038362000c7a565b620007385760405162461bcd60e51b815260206004820152601e60248201527f54686174206973206e6f74206d79206368696c6420726577617264657221000060448201526064015b60405180910390fd5b6040516001600160a01b038316907f09a87dff11d3d583e22d029f0e40d7d53ad310a87624607edddc58093b9de8ec90600090a25050565b60007f000000000000000000000000000000000000000000000000000000000000000060005483620007a3919062001784565b620007af91906200179e565b9392505050565b60008281526001602081905260409091200154620007d48162000c52565b620007e0838362000c91565b505050565b6001600160a01b0381163314620008575760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016200072f565b62000193828262000cb7565b606062000871600362000cdd565b905090565b60007fd9953e9d26e655ee6eef609dd8fe44247a567ba97a3566c3446ad19db00817a8620008a48162000c52565b83857f0000000000000000000000000000000000000000000000000000000000000000604051620008d590620014ce565b9283526001600160a01b039182166020840152166040820152606001604051809103906000f0801580156200090e573d6000803e3d6000fd5b5060405163f2fde38b60e01b81526001600160a01b0385811660048301529193509083169063f2fde38b90602401600060405180830381600087803b1580156200095757600080fd5b505af11580156200096c573d6000803e3d6000fd5b505050506200098682600362000c0490919063ffffffff16565b50846001600160a01b0316826001600160a01b03167f54646f0dbe3bc0fe3ac832bd88f62eeb3a7d854c944d23110f2697b9799be0cf60405160405180910390a3509392505050565b6000828152600260205260408120620007af908362000c6c565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000a9d5760405162461bcd60e51b815260206004820152602660248201527f4f6e6c792052656c6971756172792063616e2063616c6c20746869732066756e60448201526531ba34b7b71760d11b60648201526084016200072f565b62000aaa83838362000cec565b600062000ab8600362000c61565b905060005b8181101562000b4c5762000ad360038262000c6c565b60405163014a362160e71b815260048101879052602481018690526001600160a01b038581166044830152919091169063a51b108090606401600060405180830381600087803b15801562000b2757600080fd5b505af115801562000b3c573d6000803e3d6000fd5b5050505080600101905062000abd565b5050505050565b6000818152600260205260408120620003b09062000c61565b6000828152600160208190526040909120015462000b8a8162000c52565b620007e0838362000cb7565b62000ba28282620009e9565b620001935760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000620007af836001600160a01b03841662000d82565b60006001600160e01b03198216637965db0b60e01b1480620003b057506301ffc9a760e01b6001600160e01b0319831614620003b0565b62000c5e813362000dd4565b50565b6000620003b0825490565b6000620007af838362000e38565b6000620007af836001600160a01b03841662000e65565b62000c9d828262000b96565b6000828152600260205260409020620007e0908262000c04565b62000cc3828262000f69565b6000828152600260205260409020620007e0908262000c7a565b60606000620007af8362000fd3565b6000541562000d385762000d388162000d06858562000770565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016919062001031565b806001600160a01b0316837fcdc9fd371154c559abac08b9dcd2ad4487ea53751ef20089b83d76f95badc8508460405162000d7591815260200190565b60405180910390a3505050565b600081815260018301602052604081205462000dcb57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620003b0565b506000620003b0565b62000de08282620009e9565b620001935762000df08162001085565b62000dfd83602062001098565b60405160200162000e10929190620017e7565b60408051601f198184030181529082905262461bcd60e51b82526200072f9160040162001860565b600082600001828154811062000e525762000e526200171e565b9060005260206000200154905092915050565b6000818152600183016020526040812054801562000f5e57600062000e8c60018362001734565b855490915060009062000ea29060019062001734565b905081811462000f0e57600086600001828154811062000ec65762000ec66200171e565b906000526020600020015490508087600001848154811062000eec5762000eec6200171e565b6000918252602080832090910192909255918252600188019052604090208390555b855486908062000f225762000f2262001895565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050620003b0565b6000915050620003b0565b62000f758282620009e9565b15620001935760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6060816000018054806020026020016040519081016040528092919081815260200182805480156200102557602002820191906000526020600020905b81548152602001906001019080831162001010575b50505050509050919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052620007e090849062001252565b6060620003b06001600160a01b03831660145b60606000620010a983600262001784565b620010b6906002620016f2565b67ffffffffffffffff811115620010d157620010d162001708565b6040519080825280601f01601f191660200182016040528015620010fc576020820181803683370190505b509050600360fc1b816000815181106200111a576200111a6200171e565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106200114c576200114c6200171e565b60200101906001600160f81b031916908160001a90535060006200117284600262001784565b6200117f906001620016f2565b90505b600181111562001201576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110620011b757620011b76200171e565b1a60f81b828281518110620011d057620011d06200171e565b60200101906001600160f81b031916908160001a90535060049490941c93620011f981620018ab565b905062001182565b508315620007af5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016200072f565b6000620012a9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200132b9092919063ffffffff16565b805190915015620007e05780806020019051810190620012ca9190620018c5565b620007e05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200072f565b60606200133c848460008562001344565b949350505050565b606082471015620013a75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200072f565b600080866001600160a01b03168587604051620013c59190620018e9565b60006040518083038185875af1925050503d806000811462001404576040519150601f19603f3d011682016040523d82523d6000602084013e62001409565b606091505b50915091506200141c8783838762001427565b979650505050505050565b606083156200149b57825160000362001493576001600160a01b0385163b620014935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200072f565b50816200133c565b6200133c8383815115620014b25781518083602001fd5b8060405162461bcd60e51b81526004016200072f919062001860565b610e78806200190883390190565b600060208284031215620014ef57600080fd5b81356001600160e01b031981168114620007af57600080fd5b600080604083850312156200151c57600080fd5b50508035926020909101359150565b6000602082840312156200153e57600080fd5b5035919050565b600081518084526020808501945080840160005b83811015620015805781516001600160a01b03168752958201959082019060010162001559565b509495945050505050565b604081526000620015a0604083018562001545565b82810360208481019190915284518083528582019282019060005b81811015620015d957845183529383019391830191600101620015bb565b5090979650505050505050565b6001600160a01b038116811462000c5e57600080fd5b6000602082840312156200160f57600080fd5b8135620007af81620015e6565b600080604083850312156200163057600080fd5b8235915060208301356200164481620015e6565b809150509250929050565b602081526000620007af602083018462001545565b6000806000606084860312156200167a57600080fd5b83356200168781620015e6565b9250602084013591506040840135620016a081620015e6565b809150509250925092565b600080600060608486031215620016c157600080fd5b83359250602084013591506040840135620016a081620015e6565b634e487b7160e01b600052601160045260246000fd5b80820180821115620003b057620003b0620016dc565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b81810381811115620003b057620003b0620016dc565b6000602082840312156200175d57600080fd5b8151620007af81620015e6565b6000602082840312156200177d57600080fd5b5051919050565b8082028115828204841417620003b057620003b0620016dc565b600082620017bc57634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015620017de578181015183820152602001620017c4565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835162001821816017850160208801620017c1565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835162001854816028840160208801620017c1565b01602801949350505050565b602081526000825180602084015262001881816040850160208701620017c1565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603160045260246000fd5b600081620018bd57620018bd620016dc565b506000190190565b600060208284031215620018d857600080fd5b81518015158114620007af57600080fd5b60008251620018fd818460208701620017c1565b919091019291505056fe6101006040523480156200001257600080fd5b5060405162000e7838038062000e788339810160408190526200003591620001c1565b6001600160a01b03808316608052811660a081905260008490556040805163f7c618c160e01b8152905185928592859285928592859263f7c618c1916004808201926020929091908290030181865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd919062000202565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000121919062000227565b6200012e90600a62000361565b60c0525062000141915033905062000152565b50503360e052506200037292505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620001bc57600080fd5b919050565b600080600060608486031215620001d757600080fd5b83519250620001e960208501620001a4565b9150620001f960408501620001a4565b90509250925092565b6000602082840312156200021557600080fd5b6200022082620001a4565b9392505050565b6000602082840312156200023a57600080fd5b815160ff811681146200022057600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002a35781600019048211156200028757620002876200024c565b808516156200029557918102915b93841c939080029062000267565b509250929050565b600082620002bc575060016200035b565b81620002cb575060006200035b565b8160018114620002e45760028114620002ef576200030f565b60019150506200035b565b60ff8411156200030357620003036200024c565b50506001821b6200035b565b5060208310610133831016604e8410600b841016171562000334575081810a6200035b565b62000340838362000262565b80600019048211156200035757620003576200024c565b0290505b92915050565b60006200022060ff841683620002ab565b60805160a05160c05160e051610ab7620003c16000396000818161014b015261037e01526000610321015260006101bf0152600081816101f90152818161028501526105510152610ab76000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063bef26de011610066578063bef26de0146100d4578063e754de63146101ba578063f2fde38b146101e1578063f7c618c1146101f457600080fd5b8063715018a61461018e5780638da5cb5b14610196578063a51b1080146101a757600080fd5b806303004b47146100d45780630bd075a1146100e85780630c155f03146100fb57806326b41a061461012557806360f96a8f146101465780636f2c590a14610185575b600080fd5b6100e66100e236600461085e565b5050565b005b6100e66100f6366004610880565b61021b565b61010e61010936600461085e565b61025e565b60405161011c929190610899565b60405180910390f35b61013861013336600461085e565b61031d565b60405190815260200161011c565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011c565b61013860005481565b6100e661035f565b6001546001600160a01b031661016d565b6100e66101b5366004610939565b610373565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b6100e66101ef36600461096e565b61040c565b61016d7f000000000000000000000000000000000000000000000000000000000000000081565b610223610485565b60008190556040518181527f935d199acd8f4b2ddab56752af2edde1665f08840a56108718e70b33a1e42e089060200160405180910390a150565b604080516001808252818301909252606091829190602080830190803683370190505091507f0000000000000000000000000000000000000000000000000000000000000000826000815181106102b7576102b7610989565b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505090506102f7848461031d565b8160008151811061030a5761030a610989565b6020026020010181815250509250929050565b60007f00000000000000000000000000000000000000000000000000000000000000006000548361034e919061099f565b61035891906109ca565b9392505050565b610367610485565b61037160006104df565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103fc5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920706172656e742063616e2063616c6c20746869732066756e63746960448201526237b71760e91b60648201526084015b60405180910390fd5b610407838383610531565b505050565b610414610485565b6001600160a01b0381166104795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f3565b610482816104df565b50565b6001546001600160a01b031633146103715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f3565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054156105785761057881610547858561031d565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906105c1565b806001600160a01b0316837fcdc9fd371154c559abac08b9dcd2ad4487ea53751ef20089b83d76f95badc850846040516105b491815260200190565b60405180910390a3505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610407928692916000916106519185169084906106ce565b805190915015610407578080602001905181019061066f91906109ec565b6104075760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103f3565b60606106dd84846000856106e5565b949350505050565b6060824710156107465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103f3565b600080866001600160a01b031685876040516107629190610a32565b60006040518083038185875af1925050503d806000811461079f576040519150601f19603f3d011682016040523d82523d6000602084013e6107a4565b606091505b50915091506107b5878383876107c0565b979650505050505050565b6060831561082f578251600003610828576001600160a01b0385163b6108285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103f3565b50816106dd565b6106dd83838151156108445781518083602001fd5b8060405162461bcd60e51b81526004016103f39190610a4e565b6000806040838503121561087157600080fd5b50508035926020909101359150565b60006020828403121561089257600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b828110156108db5781516001600160a01b0316845292840192908401906001016108b6565b5050508381038285015284518082528583019183019060005b81811015610910578351835292840192918401916001016108f4565b5090979650505050505050565b80356001600160a01b038116811461093457600080fd5b919050565b60008060006060848603121561094e57600080fd5b83359250602084013591506109656040850161091d565b90509250925092565b60006020828403121561098057600080fd5b6103588261091d565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176109c457634e487b7160e01b600052601160045260246000fd5b92915050565b6000826109e757634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156109fe57600080fd5b8151801515811461035857600080fd5b60005b83811015610a29578181015183820152602001610a11565b50506000910152565b60008251610a44818460208701610a0e565b9190910192915050565b6020815260008251806020840152610a6d816040850160208701610a0e565b601f01601f1916919091016040019291505056fea26469706673582212208e6bf227d872c632758518a6d8c50d0036303f141d66e6aae076be919eb4f9b664736f6c63430008110033a26469706673582212205d51abb41beb4481ea26190e7fae95757aeac86e2fe31b466bb85f8526317f4164736f6c63430008110033";

type ParentRewarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ParentRewarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ParentRewarder__factory extends ContractFactory {
  constructor(...args: ParentRewarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardMultiplier: PromiseOrValue<BigNumberish>,
    _rewardToken: PromiseOrValue<string>,
    _reliquary: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ParentRewarder> {
    return super.deploy(
      _rewardMultiplier,
      _rewardToken,
      _reliquary,
      overrides || {}
    ) as Promise<ParentRewarder>;
  }
  override getDeployTransaction(
    _rewardMultiplier: PromiseOrValue<BigNumberish>,
    _rewardToken: PromiseOrValue<string>,
    _reliquary: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardMultiplier,
      _rewardToken,
      _reliquary,
      overrides || {}
    );
  }
  override attach(address: string): ParentRewarder {
    return super.attach(address) as ParentRewarder;
  }
  override connect(signer: Signer): ParentRewarder__factory {
    return super.connect(signer) as ParentRewarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParentRewarderInterface {
    return new utils.Interface(_abi) as ParentRewarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ParentRewarder {
    return new Contract(address, _abi, signerOrProvider) as ParentRewarder;
  }
}
