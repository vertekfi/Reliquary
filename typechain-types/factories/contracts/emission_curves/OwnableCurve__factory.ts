/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OwnableCurve,
  OwnableCurveInterface,
} from "../../../contracts/emission_curves/OwnableCurve";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "LogRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161048438038061048483398101604081905261002f9161012e565b61003833610047565b61004181610097565b50610147565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6753444835ec5800008111156100f35760405162461bcd60e51b815260206004820152601e60248201527f6d6178696d756d20656d697373696f6e20726174652065786365656465640000604482015260640160405180910390fd5b60018190556040518181527f9815b2b36745464361992486ba5ae60ebc45108dac598622ae92d91776bbc4409060200160405180910390a150565b60006020828403121561014057600080fd5b5051919050565b61032e806101566000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806334fcf4371461005c5780635776409414610071578063715018a6146100995780638da5cb5b146100a1578063f2fde38b146100bc575b600080fd5b61006f61006a3660046102af565b6100cf565b005b61008661007f3660046102af565b5060015490565b6040519081526020015b60405180910390f35b61006f6100e3565b6000546040516001600160a01b039091168152602001610090565b61006f6100ca3660046102c8565b6100f7565b6100d7610172565b6100e0816101cc565b50565b6100eb610172565b6100f5600061025f565b565b6100ff610172565b6001600160a01b0381166101695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6100e08161025f565b6000546001600160a01b031633146100f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610160565b6753444835ec5800008111156102245760405162461bcd60e51b815260206004820152601e60248201527f6d6178696d756d20656d697373696f6e207261746520657863656564656400006044820152606401610160565b60018190556040518181527f9815b2b36745464361992486ba5ae60ebc45108dac598622ae92d91776bbc4409060200160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102c157600080fd5b5035919050565b6000602082840312156102da57600080fd5b81356001600160a01b03811681146102f157600080fd5b939250505056fea2646970667358221220ec29396038a88a8862f55213f2e8876106fa175afe40fa28cc34692c379bac9e64736f6c63430008110033";

type OwnableCurveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnableCurveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnableCurve__factory extends ContractFactory {
  constructor(...args: OwnableCurveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rate: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OwnableCurve> {
    return super.deploy(_rate, overrides || {}) as Promise<OwnableCurve>;
  }
  override getDeployTransaction(
    _rate: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rate, overrides || {});
  }
  override attach(address: string): OwnableCurve {
    return super.attach(address) as OwnableCurve;
  }
  override connect(signer: Signer): OwnableCurve__factory {
    return super.connect(signer) as OwnableCurve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnableCurveInterface {
    return new utils.Interface(_abi) as OwnableCurveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnableCurve {
    return new Contract(address, _abi, signerOrProvider) as OwnableCurve;
  }
}
