/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DepositHelperERC4626,
  DepositHelperERC4626Interface,
} from "../../../../contracts/helpers/DepositHelperERC4626.sol/DepositHelperERC4626";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_reliquary",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createRelicAndDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reliquary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "harvest",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "giveEther",
        type: "bool",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relicId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "giveEther",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "burn",
        type: "bool",
      },
    ],
    name: "withdrawAllAndHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001a8838038062001a888339810160408190526200003491620000c4565b6200003f3362000057565b6001600160a01b039182166080521660a052620000fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000bf57600080fd5b919050565b60008060408385031215620000d857600080fd5b620000e383620000a7565b9150620000f360208401620000a7565b90509250929050565b60805160a051611928620001606000396000818160d501528181610a29015281816110a6015261111c0152600081816101ac015281816103a5015281816105de015281816107a601528181610f7c0152818161132401526113b501526119286000f3fe6080604052600436106100955760003560e01c8063e0df5b3e11610059578063e0df5b3e14610167578063e2bbb15814610187578063e754de631461019a578063edf3ef6e146101ce578063f2fde38b146101ef57600080fd5b80632c13adc9146100a15780633fc8cef3146100c35780636ccae05414610114578063715018a6146101345780638da5cb5b1461014957600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461167c565b61020f565b005b3480156100cf57600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012057600080fd5b506100c161012f3660046116db565b6102a4565b34801561014057600080fd5b506100c16102e6565b34801561015557600080fd5b506000546001600160a01b03166100f7565b34801561017357600080fd5b506100c161018236600461171c565b6102fa565b6100c161019536600461175e565b610389565b3480156101a657600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b6101e16101dc36600461175e565b6105b1565b60405190815260200161010b565b3480156101fb57600080fd5b506100c161020a366004611780565b6106d6565b60008061021b8561074f565b925050915061029c8282836001600160a01b031663c6e6f5928a6040518263ffffffff1660e01b815260040161025391815260200190565b602060405180830381865afa158015610270573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029491906117a4565b88888861094b565b505050505050565b6102ac610d3d565b6001600160a01b0383166102d2576102cd6001600160a01b03831682610d97565b505050565b6102cd6001600160a01b0384168383610eb0565b6102ee610d3d565b6102f86000610f13565b565b60008060006103088661074f565b925092509250610321838284600001518960018a61094b565b831561029c57604051630852cd8d60e31b8152600481018790526001600160a01b038416906342966c6890602401600060405180830381600087803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b50505050505050505050565b60405163430c208160e01b8152336004820152602481018290527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063430c208190604401602060405180830381865afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a91906117bd565b6104635760405162461bcd60e51b81526020600482015260156024820152741b9bdd081bdddb995c881bdc88185c1c1c9bdd9959605a1b60448201526064015b60405180910390fd5b60405163e48dc13560e01b8152600481018390526000906104dd906001600160a01b0384169063e48dc1359060240160c060405180830381865afa1580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d391906117da565b6080015185610f63565b6040516370a0823160e01b81523060048201529091506001600160a01b038084169163e2bbb158918416906370a0823190602401602060405180830381865afa15801561052e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055291906117a4565b856040518363ffffffff1660e01b8152600401610579929190918252602082015260400190565b600060405180830381600087803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b5050505050505050565b6000806105be8484610f63565b6040516370a0823160e01b81523060048201529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691636705fcf391339188918616906370a0823190602401602060405180830381865afa158015610633573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065791906117a4565b6040516001600160e01b031960e086901b1681526001600160a01b039093166004840152602483019190915260448201526064016020604051808303816000875af11580156106aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ce91906117a4565b949350505050565b6106de610d3d565b6001600160a01b0381166107435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045a565b61074c81610f13565b50565b600061078a6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405163430c208160e01b8152336004820152602481018490527f000000000000000000000000000000000000000000000000000000000000000092506000906001600160a01b0384169063430c208190604401602060405180830381865afa1580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081f91906117bd565b6108635760405162461bcd60e51b81526020600482015260156024820152741b9bdd081bdddb995c881bdc88185c1c1c9bdd9959605a1b604482015260640161045a565b60405163e48dc13560e01b8152600481018590526001600160a01b0384169063e48dc1359060240160c060405180830381865afa1580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc91906117da565b6080810151604051636e7d401960e01b81529193506001600160a01b03851691636e7d4019916109029160040190815260200190565b602060405180830381865afa15801561091f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109439190611862565b929491935050565b81156109bd5760405163d1abb90760e01b815260048101859052602481018490523360448201526001600160a01b0387169063d1abb90790606401600060405180830381600087803b1580156109a057600080fd5b505af11580156109b4573d6000803e3d6000fd5b50505050610a1f565b604051630441a3e760e41b815260048101859052602481018490526001600160a01b0387169063441a3e7090604401600060405180830381600087803b158015610a0657600080fd5b505af1158015610a1a573d6000803e3d6000fd5b505050505b8015610c565760007f00000000000000000000000000000000000000000000000000000000000000009050806001600160a01b0316866001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab69190611862565b6001600160a01b031614610b015760405162461bcd60e51b81526020600482015260126024820152711b9bdd08185b88195d1a195c881d985d5b1d60721b604482015260640161045a565b60405163ce96cb7760e01b81523060048201526000906001600160a01b0388169063ce96cb7790602401602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c91906117a4565b604051632d182be560e21b815260048101829052306024820181905260448201529091506001600160a01b0388169063b460af94906064016020604051808303816000875af1158015610bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be791906117a4565b50604051632e1a7d4d60e01b8152600481018290526001600160a01b03831690632e1a7d4d90602401600060405180830381600087803b158015610c2a57600080fd5b505af1158015610c3e573d6000803e3d6000fd5b50610c4f9250339150839050610d97565b505061029c565b60405163ce96cb7760e01b81523060048201526001600160a01b0386169063b460af9490829063ce96cb7790602401602060405180830381865afa158015610ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc691906117a4565b6040516001600160e01b031960e084901b16815260048101919091523360248201523060448201526064016020604051808303816000875af1158015610d10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3491906117a4565b50505050505050565b6000546001600160a01b031633146102f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161045a565b80471015610de75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161045a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610e34576040519150601f19603f3d011682016040523d82523d6000602084013e610e39565b606091505b50509050806102cd5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161045a565b6040516001600160a01b0383166024820152604481018290526102cd90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261143b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051636e7d401960e01b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636e7d401990602401602060405180830381865afa158015610fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fef9190611862565b90506000816001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611031573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110559190611862565b90503415611193573483146110a45760405162461bcd60e51b81526020600482015260156024820152740cae8d0cae440c2dadeeadce840dad2e6dac2e8c6d605b1b604482015260640161045a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161461111a5760405162461bcd60e51b81526020600482015260126024820152711b9bdd08185b88195d1a195c881d985d5b1d60721b604482015260640161045a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561117557600080fd5b505af1158015611189573d6000803e3d6000fd5b50505050506111a8565b6111a86001600160a01b03821633308661150d565b604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015282169063dd62ed3e90604401602060405180830381865afa1580156111f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121891906117a4565b6000036112955760405163095ea7b360e01b81526001600160a01b038381166004830152600019602483015282169063095ea7b3906044016020604051808303816000875af115801561126f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129391906117bd565b505b604051636e553f6560e01b8152600481018490523060248201526001600160a01b03831690636e553f65906044016020604051808303816000875af11580156112e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130691906117a4565b50604051636eb1769f60e11b81523060048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015283169063dd62ed3e90604401602060405180830381865afa158015611373573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139791906117a4565b6000036114345760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af115801561140e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143291906117bd565b505b5092915050565b6000611490826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661154b9092919063ffffffff16565b8051909150156102cd57808060200190518101906114ae91906117bd565b6102cd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161045a565b6040516001600160a01b03808516602483015283166044820152606481018290526115459085906323b872dd60e01b90608401610edc565b50505050565b60606106ce848460008585600080866001600160a01b0316858760405161157291906118a3565b60006040518083038185875af1925050503d80600081146115af576040519150601f19603f3d011682016040523d82523d6000602084013e6115b4565b606091505b50915091506115c5878383876115d0565b979650505050505050565b6060831561163f578251600003611638576001600160a01b0385163b6116385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161045a565b50816106ce565b6106ce83838151156116545781518083602001fd5b8060405162461bcd60e51b815260040161045a91906118bf565b801515811461074c57600080fd5b6000806000806080858703121561169257600080fd5b843593506020850135925060408501356116ab8161166e565b915060608501356116bb8161166e565b939692955090935050565b6001600160a01b038116811461074c57600080fd5b6000806000606084860312156116f057600080fd5b83356116fb816116c6565b9250602084013561170b816116c6565b929592945050506040919091013590565b60008060006060848603121561173157600080fd5b8335925060208401356117438161166e565b915060408401356117538161166e565b809150509250925092565b6000806040838503121561177157600080fd5b50508035926020909101359150565b60006020828403121561179257600080fd5b813561179d816116c6565b9392505050565b6000602082840312156117b657600080fd5b5051919050565b6000602082840312156117cf57600080fd5b815161179d8161166e565b600060c082840312156117ec57600080fd5b60405160c0810181811067ffffffffffffffff8211171561181d57634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b60006020828403121561187457600080fd5b815161179d816116c6565b60005b8381101561189a578181015183820152602001611882565b50506000910152565b600082516118b581846020870161187f565b9190910192915050565b60208152600082518060208401526118de81604085016020870161187f565b601f01601f1916919091016040019291505056fea2646970667358221220c4895e2c60fba6d335e06199efe3551a8d93f2a335a8ae4c7086491a982338e264736f6c63430008110033";

type DepositHelperERC4626ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositHelperERC4626ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositHelperERC4626__factory extends ContractFactory {
  constructor(...args: DepositHelperERC4626ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _reliquary: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositHelperERC4626> {
    return super.deploy(
      _reliquary,
      _weth,
      overrides || {}
    ) as Promise<DepositHelperERC4626>;
  }
  override getDeployTransaction(
    _reliquary: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_reliquary, _weth, overrides || {});
  }
  override attach(address: string): DepositHelperERC4626 {
    return super.attach(address) as DepositHelperERC4626;
  }
  override connect(signer: Signer): DepositHelperERC4626__factory {
    return super.connect(signer) as DepositHelperERC4626__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositHelperERC4626Interface {
    return new utils.Interface(_abi) as DepositHelperERC4626Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositHelperERC4626 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DepositHelperERC4626;
  }
}
